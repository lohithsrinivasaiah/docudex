name: Poetry CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          pipx install poetry
        env:
          PIPX_BIN_DIR: ${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Roaming\Python\Scripts' || '/home/runner/.local/bin' }}

      - name: Add Poetry to PATH
        run: |
          echo "${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Roaming\Python\Scripts' || '/home/runner/.local/bin' }}" >> $GITHUB_PATH

      - name: Verify Poetry installation
        run: |
          poetry --version

      - name: Install dependencies
        run: |
          poetry install --with dev  # Install dependencies including dev group

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=docudex --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: coverage.xml

  coverage-check:
    name: Check coverage drop
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          pipx install poetry
        env:
          PIPX_BIN_DIR: /home/runner/.local/bin

      - name: Add Poetry to PATH
        run: |
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Install coverage and diff tools
        run: |
          poetry add --group dev coverage diff-cover
          poetry install --with dev

      - name: Download latest coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-ubuntu-latest
          path: .

      - name: Fail PR if coverage drops
        run: |
          git fetch origin main
          poetry run diff-cover coverage.xml --compare-branch=origin/main --fail-under=100

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          pipx install poetry
        env:
          PIPX_BIN_DIR: /home/runner/.local/bin

      - name: Add Poetry to PATH
        run: |
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Build package
        run: |
          poetry build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
